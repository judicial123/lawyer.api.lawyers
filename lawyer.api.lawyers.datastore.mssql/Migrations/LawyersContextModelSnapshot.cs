// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lawyer.api.lawyers.datastore.mssql.DatabaseContext;

#nullable disable

namespace lawyer.api.lawyers.datastore.mssql.Migrations
{
    [DbContext(typeof(LawyersContext))]
    partial class LawyersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.AcademicInfoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LawyerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AcademicInfo", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.AcademicInfoEntity", b =>
                {
                    b.HasOne("lawyer.api.lawyers.datastore.mssql.Model.LawyerEntity", "Lawyer")
                        .WithMany("AcademicInfos")
                        .HasForeignKey("LawyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.ExampleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PropertyOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Examples", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawFirmEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoogleMapsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaLinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LawFirms", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.CommentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdLawFirm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdLawFirm");

                    b.ToTable("Comments", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.PracticeAreaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdCountry")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TechnicalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PracticeAreas", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawFirmPracticeAreaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdLawFirm")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPracticeArea")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdLawFirm");

                    b.HasIndex("IdPracticeArea");

                    b.ToTable("LawFirmPracticeAreas", "lawyer");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawyerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("City")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CredentialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoogleMapsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LawFirmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialMediaLinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LawFirmId");

                    b.ToTable("Lawyers", "lawyer");
                });
            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawFirmPracticeAreaEntity", b =>
                {
                    b.HasOne("lawyer.api.lawyers.datastore.mssql.Model.LawFirmEntity", "LawFirm")
                        .WithMany("LawFirmPracticeAreas")
                        .HasForeignKey("IdLawFirm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lawyer.api.lawyers.datastore.mssql.Model.PracticeAreaEntity", "PracticeArea")
                        .WithMany("LawFirmPracticeAreas")
                        .HasForeignKey("IdPracticeArea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawFirm");
                    b.Navigation("PracticeArea");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.CommentEntity", b =>
                {
                    b.HasOne("lawyer.api.lawyers.datastore.mssql.Model.LawFirmEntity", "LawFirm")
                        .WithMany("Comments")
                        .HasForeignKey("IdLawFirm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawFirm");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawyerEntity", b =>
                {
                    b.HasOne("lawyer.api.lawyers.datastore.mssql.Model.LawFirmEntity", "LawFirm")
                        .WithMany()
                        .HasForeignKey("LawFirmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawFirm");
                    b.Navigation("AcademicInfos");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.LawFirmEntity", b =>
                {
                    b.Navigation("Comments");
                    b.Navigation("Lawyers");
                    b.Navigation("LawFirmPracticeAreas");
                });

            modelBuilder.Entity("lawyer.api.lawyers.datastore.mssql.Model.PracticeAreaEntity", b =>
                {
                    b.Navigation("LawFirmPracticeAreas");
                });
#pragma warning restore 612, 618
        }
    }
}
